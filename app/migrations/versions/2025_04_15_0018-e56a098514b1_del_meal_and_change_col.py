"""del meal and change col

Revision ID: e56a098514b1
Revises: dbc17e082d04
Create Date: 2025-04-15 00:18:34.640154

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e56a098514b1'
down_revision: Union[str, None] = 'dbc17e082d04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_index('ix_Dish_picture', table_name='Dish')
    op.drop_table('Dish')
    op.drop_table('Meal')
    op.add_column('RoutineFood', sa.Column('food_name', sa.String(), nullable=False))

    flagstatus_enum = postgresql.ENUM('READY', 'STARTED', 'TERMINATED', name='flagstatus')
    flagstatus_enum.create(op.get_bind())  # DB에 실제 ENUM 타입 생성

    op.add_column('TrackParticipant', sa.Column('status', sa.Enum('READY', 'STARTED', 'TERMINATED', name='flagstatus'), nullable=False))
    op.drop_column('TrackParticipant', 'finished')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('TrackParticipant', sa.Column('finished', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('TrackParticipant', 'status')
    op.drop_column('RoutineFood', 'food_name')
    op.create_table('Meal',
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('mealday_id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('mealtime', postgresql.ENUM('BREAKFAST', 'BRUNCH', 'LUNCH', 'LINNER', 'DINNER', 'SNACK', name='mealtime'), autoincrement=False, nullable=False),
    sa.Column('check', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['mealday_id'], ['MealDay.id'], name='fk_Meal_mealday_id_MealDay'),
    sa.PrimaryKeyConstraint('id', name='pk_Meal'),
    sa.UniqueConstraint('mealday_id', 'mealtime', name='_mealday_id_mealtime_uc'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Dish',
    sa.Column('id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('meal_id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('picture', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('text', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('record_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('update_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('heart', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('carb', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('protein', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('fat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('calorie', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('track_goal', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('label', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trackpart_id', sa.VARCHAR(length=26), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['meal_id'], ['Meal.id'], name='fk_Dish_meal_id_Meal'),
    sa.ForeignKeyConstraint(['trackpart_id'], ['TrackParticipant.id'], name='fk_Dish_trackpart_id_TrackParticipant'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='fk_Dish_user_id_User'),
    sa.PrimaryKeyConstraint('id', name='pk_Dish')
    )
    op.create_index('ix_Dish_picture', 'Dish', ['picture'], unique=False)
    # ### end Alembic commands ###
