"""add track participant

Revision ID: f3684bfdee51
Revises: be67c74b7fb2
Create Date: 2025-03-25 13:53:24.198673

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f3684bfdee51'
down_revision: Union[str, None] = 'be67c74b7fb2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('User', 'gender',
               existing_type=postgresql.ENUM('MALE', 'FEMALE', name='gender'),
               nullable=True)
    op.alter_column('User', 'birth',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('User', 'profile_picture',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('User', 'fcm_token',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('User', 'fcm_token',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('User', 'profile_picture',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('User', 'birth',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('User', 'gender',
               existing_type=postgresql.ENUM('MALE', 'FEMALE', name='gender'),
               nullable=False)
    # ### end Alembic commands ###
